package DataStorage;
import Controller.*;
import Model.LibrarianAccountModel;
import Model.StudentAccountModel;
import java.util.HashMap;
public class DataSource implements DataSourceService{
    private static DataSource dataSource=null;
    private HashMap<Integer, BookControllerService>libraryBooks=new HashMap<>();
    private HashMap<Integer,StudentAccountModel>borrowerDetails=new HashMap<>();
    private HashMap<String, LibrarianAccountModel>librarianDetails=new HashMap<>();
    private HashMap<String, StudentAccountModel>studentDetails=new HashMap<>();
    private HashMap<LibrarianAccountModel,LibrarianAccountControllerService>librarianController=new HashMap<>();
    private HashMap<StudentAccountModel,StudentAccountControllerService>studentController=new HashMap<>();

    private DataSource(){
        //Constructor of DataStorage.DataSource class
    }
    public static DataSource getInstance(){
        if( dataSource==null) {
            dataSource =new DataSource();
        }
        return dataSource;
    }
    public void addBook(int id,BookControllerService bookController) {
        libraryBooks.put(id, bookController);
    }
    public void removeBook(int id){
        libraryBooks.remove(id);
    }
    public HashMap<Integer, BookControllerService> getBooks(){
        return libraryBooks;
    }
    public void addBorrower(int id,StudentAccountModel studentAccountModel){
        borrowerDetails.put(id, studentAccountModel);
    }
    public void removeBorrower(int id){
        borrowerDetails.remove(id);
    }

    public HashMap<Integer, StudentAccountModel> getBorrowers() {
        return borrowerDetails;
    }
    public boolean containsBook(int id){
        return libraryBooks.containsKey(id);
    }
    public BookControllerService getBook(int id){
        return libraryBooks.get(id);
    }
    public void addStudent(String userName,StudentAccountModel studentAccountModel){
        studentDetails.put(userName,studentAccountModel);
    }
    public void addLibrarian(String userName,LibrarianAccountModel librarianAccountModel){
        librarianDetails.put(userName,librarianAccountModel);
    }
    public void removeStudent(String userName){
        studentDetails.remove(userName);
    }
    public void removeLibrarian(String userName){
        librarianDetails.remove(userName);
    }
    public boolean containsStudent(String userName){
        return studentDetails.containsKey(userName);
    }
    public boolean containsLibrarian(String userName){
        return librarianDetails.containsKey(userName);
    }
    public LibrarianAccountModel getLibrarian(String userName){
        return librarianDetails.get(userName);
    }
    public StudentAccountModel getStudent(String userName){
        return studentDetails.get(userName);
    }
    public void addLibrarianController(LibrarianAccountModel librarianAccountModel,LibrarianAccountController librarianAccountController){
        librarianController.put(librarianAccountModel,librarianAccountController);
    }
    public void addStudentController(StudentAccountModel studentAccountModel,StudentAccountController studentAccountController){
        studentController.put(studentAccountModel,studentAccountController);
    }
    public LibrarianAccountControllerService getLibrarianController(LibrarianAccountModel librarianAccountModel){
        return librarianController.get(librarianAccountModel);
    }
    public StudentAccountControllerService getStudentController(StudentAccountModel studentAccountModel){
        return studentController.get(studentAccountModel);
    }
}
