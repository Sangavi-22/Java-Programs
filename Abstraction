import java.util.Scanner; 
abstract class Employee{  //This class contains abstract and non-abstract methods
    public String employeeName,designation;  
    double basePay,dearnessAllowance,houseRentAllowance,providentFund,staffClubFund,grossPay,netPay,yearlyBonus;
    int employeeId; 
    void setEmployeeDetails(String employeeName,String designation,int employeeId,double basePay){ 
        this.employeeName=employeeName; 
        this.designation=designation;
        this.employeeId=employeeId;  
        this.basePay=basePay; 
    }
    abstract void calculateYearlyBonus(double basePay); 
    void calculateSalary(){ 
        dearnessAllowance=0.97*basePay;
        houseRentAllowance=0.10*basePay;
        providentFund=0.12*basePay;
        staffClubFund=0.001*basePay;
        grossPay=basePay+dearnessAllowance+houseRentAllowance;
        netPay=grossPay-providentFund-staffClubFund+yearlyBonus; 
        System.out.println("Name: "+employeeName); 
        System.out.println("Designation: "+designation); 
        System.out.println("Employee id: "+employeeId); 
        System.out.println("GrossPay: "+grossPay); 
        System.out.println("Net Pay:"+netPay); 
        System.out.println("The yearly bonus of Professor is "+yearlyBonus);
    } 
    
}
class Professor extends Employee{
    void calculateYearlyBonus(double basePay){
        yearlyBonus=basePay*0.3;  
    } 
}   
class AssociateProfessor extends Employee{  
    void calculateYearlyBonus(double basePay){  
       yearlyBonus=basePay*0.1; 
    }
    
} 
class Main{ 
    public static void main(String[] args){ 
        String employeeName,designation; 
        int employeeId; 
        double basePay;
        Scanner sc=new Scanner(System.in);  
        System.out.println("Welcome");  
        System.out.println("Enter your designation: 1.Professor 2.AssociateProfessor");
        designation=sc.nextLine(); 
        switch(designation){ 
            case "Professor":   
                System.out.println("Please enter the following details:\n1.Name\n2.Employee Id\n4.Base Pay");  
                employeeName=sc.nextLine(); 
                employeeId=sc.nextInt(); 
                basePay=sc.nextDouble();
                Professor professorSalary=new Professor();  
                professorSalary.setEmployeeDetails(employeeName,designation,employeeId,basePay); 
                professorSalary.calculateYearlyBonus(basePay);
                professorSalary.calculateSalary(); 
                break;
            case "AssociateProfessor":
                employeeName=sc.nextLine();
                employeeId=sc.nextInt(); 
                basePay=sc.nextDouble();
                AssociateProfessor associateProfessorSalary=new AssociateProfessor(); 
                associateProfessorSalary.setEmployeeDetails(employeeName,designation,employeeId,basePay); 
                associateProfessorSalary.calculateYearlyBonus(basePay); 
                associateProfessorSalary.calculateSalary(); 
                break; 
        } 
    } 
}
